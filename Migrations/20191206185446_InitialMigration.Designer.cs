// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SecondCharliesTechShop.Models;

namespace SecondCharliesTechShop.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20191206185446_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SecondCharliesTechShop.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Laptops"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Computer Mice"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Mouse Pads"
                        });
                });

            modelBuilder.Entity("SecondCharliesTechShop.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderPlaced")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OrderTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SecondCharliesTechShop.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TechId")
                        .HasColumnType("int");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("OrderId");

                    b.HasIndex("TechId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("SecondCharliesTechShop.Models.ShoppingCartItem", b =>
                {
                    b.Property<int>("ShoppingCartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("ShoppingCartId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TechId")
                        .HasColumnType("int");

                    b.HasKey("ShoppingCartItemId");

                    b.HasIndex("TechId");

                    b.ToTable("ShoppingCartItems");
                });

            modelBuilder.Entity("SecondCharliesTechShop.Models.Tech", b =>
                {
                    b.Property<int>("TechId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InStock")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PopularTech")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("TechId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Tech");

                    b.HasData(
                        new
                        {
                            TechId = 1,
                            CategoryId = 1,
                            ImageUrl = "https://images-na.ssl-images-amazon.com/images/I/81H9y1pPW6L._AC_SL1500_.jpg",
                            InStock = true,
                            Name = "Acer Laptop",
                            PopularTech = true,
                            Price = 799.99m
                        },
                        new
                        {
                            TechId = 2,
                            CategoryId = 2,
                            ImageUrl = "https://images-na.ssl-images-amazon.com/images/I/61d9C4yCB2L._AC_SL1000_.jpg",
                            InStock = true,
                            Name = "PICTEK Gaming Mouse",
                            PopularTech = false,
                            Price = 15.29m
                        },
                        new
                        {
                            TechId = 3,
                            CategoryId = 3,
                            ImageUrl = "https://images-na.ssl-images-amazon.com/images/I/51Wf5oBCB1L._AC_SL1000_.jpg",
                            InStock = true,
                            Name = "Teemo Mouse Pad",
                            PopularTech = false,
                            Price = 10.99m
                        },
                        new
                        {
                            TechId = 4,
                            CategoryId = 2,
                            ImageUrl = "https://images-na.ssl-images-amazon.com/images/I/81ZQgWwuVzL._AC_SL1500_.jpg",
                            InStock = true,
                            Name = "Logitech G602 Mouse",
                            PopularTech = false,
                            Price = 24.99m
                        });
                });

            modelBuilder.Entity("SecondCharliesTechShop.Models.OrderDetail", b =>
                {
                    b.HasOne("SecondCharliesTechShop.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SecondCharliesTechShop.Models.Tech", "Tech")
                        .WithMany()
                        .HasForeignKey("TechId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SecondCharliesTechShop.Models.ShoppingCartItem", b =>
                {
                    b.HasOne("SecondCharliesTechShop.Models.Tech", "Tech")
                        .WithMany()
                        .HasForeignKey("TechId");
                });

            modelBuilder.Entity("SecondCharliesTechShop.Models.Tech", b =>
                {
                    b.HasOne("SecondCharliesTechShop.Models.Category", "Category")
                        .WithMany("tech")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
